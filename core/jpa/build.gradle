buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.liquibase:liquibase-gradle-plugin:1.2.4') {
            exclude(module: 'liquibase-core')
        }
        classpath('org.liquibase:liquibase-core:3.5.3')
        classpath('org.postgresql:postgresql:42.0.0')
    }
}

apply plugin: 'org.liquibase.gradle'


dependencies {
    compile group: 'javax', name: 'javaee-api'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'

    testCompile group: 'junit', name: 'junit'
}

ext {
    database_name = 'is'

    database_bin = 'C:/Program Files/PostgreSQL/9.6/bin/'

    liquibase_driver = 'org.postgresql.Driver'
    liquibase_dir = '/src/main/resources/liquibase'
    liquibase_postgres_url = 'jdbc:postgresql://localhost:5432/'

    liquibase_database_name = ext.database_name
    liquibase_database_username = 'postgres'
    liquibase_database_password = 'root'

    liquibase_test_database_name = ext.database_name + '_test'
    liquibase_test_database_username = ext.liquibase_database_username
    liquibase_test_database_password = ext.liquibase_database_password
}

if(!ext.has("runList")){
    ext.runList = 'mainAct'
}

liquibase {
    activities {
        mainAct {
            driver project.liquibase_driver
            changeLogFile projectDir.path + project.liquibase_dir + '/changelogs.groovy'
            url project.ext.liquibase_postgres_url + project.liquibase_database_name
            username project.liquibase_database_username
            password project.liquibase_database_password
        }
        genAct {
            driver project.liquibase_driver
            changeLogFile projectDir.path + project.liquibase_dir + '/changelogs-generate.groovy'
            url project.liquibase_postgres_url + project.liquibase_database_name
            username project.liquibase_database_username
            password project.liquibase_database_password
        }
        genDiffAct {
            driver project.liquibase_driver
            changeLogFile projectDir.path + project.liquibase_dir + '/changelog-diff.groovy'
            url project.liquibase_postgres_url + project.liquibase_database_name
            username project.liquibase_database_username
            password project.liquibase_database_password
            referenceUrl project.liquibase_postgres_url + project.liquibase_test_database_name
            referenceUsername project.liquibase_test_database_username
            referencePassword project.liquibase_test_database_password
        }
        testAct {
            driver project.liquibase_driver
            changeLogFile projectDir.path + project.liquibase_dir + '/changelogs.groovy'
            url project.liquibase_postgres_url + project.liquibase_test_database_name
            username project.liquibase_test_database_username
            password project.liquibase_test_database_password
        }
        testImpAct {
            driver project.liquibase_driver
            changeLogFile projectDir.path + project.liquibase_dir + '/changelog-sql.groovy'
            url project.liquibase_postgres_url + project.liquibase_test_database_name
            username project.liquibase_test_database_username
            password project.liquibase_test_database_password
        }
    }
    runList = project.ext.runList
}

task setRunMainAct { doFirst{ project.ext.runList = 'mainAct' } }
task setRunTestAct { doFirst { project.liquibase.runList = 'testAct' } }
task setRunTestImpAct { doFirst { project.liquibase.runList = 'testImpAct' } }
task setRunGenDiffAct { doFirst { project.liquibase.runList = 'genDiffAct' } }

task deleteDiffChangeLog(type: Delete) {
    delete project.projectDir.path + '/src/main/resources/liquibase/changelog-diff.groovy'
}

task genDiff {
    dependsOn deleteDiffChangeLog
    dependsOn setRunGenDiffAct
    dependsOn liquibaseDiffChangeLog
    deleteDiffChangeLog.finalizedBy setRunGenDiffAct
    setRunGenDiffAct.finalizedBy liquibaseDiffChangeLog
}

task testInit {
    dependsOn setRunTestAct
    dependsOn liquibaseDropAll
    dependsOn liquibaseUpdate
    setRunTestAct.finalizedBy liquibaseDropAll
    liquibaseDropAll.finalizedBy liquibaseUpdate
}

task testImport {
    dependsOn setRunTestImpAct
    dependsOn liquibaseUpdate
    setRunTestImpAct.finalizedBy liquibaseUpdate
}

/*
 * Task to create database in postgresql
 */
String getCreateDatabaseCommand(String db){
    return 'psql -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = \'' + db + '\'" | grep -q 1 || psql -U postgres -c "CREATE DATABASE ' + db + '"'
}

task initMainDatabase(type:Exec) {
    workingDir project.database_bin
    commandLine 'cmd', '/c', getCreateDatabaseCommand(project.liquibase_database_name)
}

task initTestDatabase(type:Exec) {
    workingDir project.database_bin
    commandLine 'cmd', '/c', getCreateDatabaseCommand(project.liquibase_database_name)
}

task initAllDatabases() {
    dependsOn initMainDatabase
    dependsOn initTestDatabase
}