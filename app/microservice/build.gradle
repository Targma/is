dependencies {
    compile project(':core:restComponents')

    compile group: "com.kumuluz.ee", name: 'kumuluzee-core'
    compile group: "com.kumuluz.ee", name: 'kumuluzee-servlet-jetty'
    compile group: "com.kumuluz.ee", name: 'kumuluzee-jax-rs-jersey'
    compile group: "com.kumuluz.ee", name: 'kumuluzee-jpa-hibernate'
    compile group: "com.kumuluz.ee", name: 'kumuluzee-cdi-weld'
    compile group: 'org.postgresql', name: 'postgresql'

    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4'
    compile group: 'org.slf4j', name: 'slf4j-simple'

    testCompile group: 'junit', name: 'junit'
}


String[] modules = [
        "jpa-" + project.version + ".jar",
        "restComponents-" + project.version + ".jar",
        "businessLogic-" + project.version + ".jar"
]

task copyCompileDependencies() {
    def dependencyDir = project.buildDir.name + "/kumuluzee/dependency"

    doLast {
        if(!file(dependencyDir).exists()){
            println "Copying all external dependencies."
            copy {
                from configurations.compile.filter {
                    !modules.contains(it.name)
                }
                into dependencyDir
            }
        }
        println "Copying all modules as dependency."
        copy {
            from configurations.compile.filter {
                modules.contains(it.name)
            }
            into dependencyDir
        }
    }
}

task copyCompileClasses(type: Copy) {
    from "src/main/resources"
    from "build/classes/java/main"
    into project.buildDir.name + "/kumuluzee/classes"
}

task buildKumuluzEE {
    dependsOn assemble
    dependsOn copyCompileDependencies
    dependsOn copyCompileClasses
    copyCompileDependencies.mustRunAfter assemble
    copyCompileClasses.mustRunAfter assemble
}

task runKumuluzEE(type: JavaExec) {
    dependsOn assemble
    main = 'com.kumuluz.ee.EeApplication'
    classpath = files(project.buildDir.name + "/kumuluzee/classes") + fileTree(dir: project.buildDir.name + "/kumuluzee/dependency")
    environment('PORT', '7080')
}